{"version":3,"sources":["components/UI/Card.jsx","components/Expenses/ExpensesFilter.jsx","components/Expenses/ExpenseDate.jsx","components/Expenses/ExpenseItem.jsx","components/Expenses/ExpensesList.jsx","components/Chart/ChartBar.jsx","components/Chart/Chart.jsx","components/Expenses/ExpensesChart.jsx","components/Expenses/Expenses.jsx","components/NewExpense/ExpenseForm.jsx","components/NewExpense/NewExpense.jsx","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","prop","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","useState","title","setTitle","amount","onClick","ExpensesList","filteredItems","length","items","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","placeholder","required","min","step","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","lastExpenses","setLastExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc198c5c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value=\"select\">All Years</option>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from \"react\";\n\nconst ExpenseDate = (prop) => {\n  // console.log(prop.date.toDateString());\n  const month = prop.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = prop.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = prop.date.getFullYear();\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__day\">{day}</div>\n      <div className=\"expense-date__year\">{year}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React, { useState } from \"react\";\nimport \"./ExpenseItem.css\";\nimport \"./ExpenseDate.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\nconst ExpenseItem = (props) => {\n  const [title, setTitle] = useState(props.title);\n\n  const clickHandler = () => {\n    setTitle(\"Updated\");\n  };\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n        <button onClick={clickHandler}>Change Title</button>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\n\nconst ExpensesList = (props) => {\n  if (props.filteredItems.length === 0) {\n    return (\n      <>\n        <h2 className=\"expenses-list__fallback\">All time expenses</h2>\n        <ul className=\"expenses-list\">\n          {props.items.map((expense) => (\n            <ExpenseItem\n              key={expense.id}\n              className=\"expenses\"\n              title={expense.title}\n              amount={expense.amount}\n              date={expense.date}\n            />\n          ))}\n        </ul>\n      </>\n    );\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.filteredItems.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          className=\"expenses\"\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\nimport \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import React from \"react\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { useState } from \"react/cjs/react.development\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"select\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  let filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        {filteredExpenses.length > 0 && (\n          <ExpensesChart expenses={filteredExpenses} />\n        )}\n        <ExpensesList filteredItems={filteredExpenses} items={props.items} />\n      </Card>\n    </>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: \"\",\n  //   enteredAmount: \"\",\n  //   enteredDate: \"\",\n  // });\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value };\n    // });\n  };\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredAmount: event.target.value };\n    // });\n  };\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredDate: event.target.value };\n    // });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            onChange={titleChangeHandler}\n            value={enteredTitle}\n            placeholder=\"Name your expense\"\n            required\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            onChange={amountChangeHandler}\n            value={enteredAmount}\n            min=\"0.01\"\n            step=\"0.01\"\n            placeholder=\"How much did you spend\"\n            required\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            onChange={dateChangeHandler}\n            value={enteredDate}\n            min=\"2019-01-01\"\n            max=\"2023-01-01\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const SaveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: (Math.random() * 100).toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={SaveExpenseDataHandler}\n          onCancel={stopEditingHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2019, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2020, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n  {\n    id: \"e5\",\n    title: \"New AirPods\",\n    amount: 179,\n    date: new Date(2022, 1, 24),\n  },\n];\n\nconst App = () => {\n  const [lastExpenses, setLastExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setLastExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={lastExpenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}